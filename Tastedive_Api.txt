import requests_with_caching
import json

def get_movies_from_tastedive(tags_string):
    baseurl = "https://tastedive.com/api/similar"
    params_diction = {'q':tags_string,'type':'movies','limit':5}
    resp = requests_with_caching.get(baseurl, params = params_diction)
    
    return json.loads(resp.text)

def extract_movie_titles(dic):
    lst = []
    newdic = dic['Similar']['Results']
    for ele in newdic :
        lst.append(ele['Name'])
    return lst

def get_related_titles(mv_lst):
    ans_lst = []
    for mov in mv_lst :
        x = extract_movie_titles(get_movies_from_tastedive(mov))
        for i in x :
            if i not in ans_lst :
                ans_lst.append(i)
    return ans_lst
# some invocations that we use in the automated tests; uncomment these if you are getting errors and want better error messages
# get_related_titles(["Black Panther", "Captain Marvel"])
# get_related_titles([])

# It takes a list of movie titles as input. It gets five related movies for each from TasteDive, extracts the titles for all of them, and combines them all into a single list. Doesn’t includes the same movie twice.